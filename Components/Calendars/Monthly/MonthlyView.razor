@code{

    [Parameter] public DateTime Today { get; set; } = new DateTime();
    [Parameter] public IEnumerable<IEvent> Events { get; set; } = new List<IEvent>();

    public MonthBase CurrentMonth { get; set; }

    IList<string> WeekDayLabels = new List<string>();
    IList<MonthlyDate> WeekDays = new List<MonthlyDate>();

    void NextMonth()
    {
        var Id = CurrentMonth.Number;
        var Year = CurrentMonth.Year;

        CurrentMonth = CurrentMonth.NextMonth();

        StateHasChanged();
    }
    void PreviousMonth()
    {
        var Id = CurrentMonth.Number;
        var Year = CurrentMonth.Year;

        CurrentMonth = CurrentMonth.PreviousMonth();

        StateHasChanged();
    }

    protected override Task OnParametersSetAsync()
    {
        Today = DateTime.Today;

        CurrentMonth = Today.ThisMonth();

        WeekDayLabels = CurrentMonth
            .Weeks
            .FirstOrDefault()
            .WeekDays
            .Select(a => a.Name)
            .ToList();

        return Task.CompletedTask;
    }

    public void HandleDateSelected(bool Selected)
    { }

    internal void AddDay(MonthlyDate Day)
    {
        WeekDays.Add(Day);
    }
}

@if (CurrentMonth != null)
{
<div class="pt-5 container-fluid">
    <CascadingValue Value="this">
        
        <div class="container-fluid">
            <div class="row">                

                <div class="col-sm p-0 text-center">
                    <span @onclick="PreviousMonth" class="material-icons m-0">
                        arrow_back
                    </span>

                    <span>
                        <span>@CurrentMonth.Name @CurrentMonth.Year.Number</span>
                    </span>

                    <span @onclick="NextMonth" class="material-icons m-0">
                        arrow_forward
                    </span>

                </div>

            </div>
            <div class="card-deck text-center">
                @foreach (var d in WeekDayLabels)
                {
                    <div class="rounded-0 card m-0 py-2" style="background-color:lightgrey">@d</div>
                }                
            </div>
            @foreach (var item in CurrentMonth.Weeks)
            {
                <div class="card-deck text-center">

                    @foreach(var d in item.WeekDays)
                    {
                        <MonthlyDate CurrentDay="d" Events="Events">
                            <ModalContent>
                                <DailyView CurrentDay="d"/>
                            </ModalContent>
                        </MonthlyDate>
                    }                   

                </div>
            }

        </div>
    </CascadingValue>
</div>
}